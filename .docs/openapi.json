{
  "openapi": "3.0.3",
  "info": {
    "title": "Bom Pedido API",
    "version": "1.0.0",
    "description": "API para gerenciamento de pedidos, delivery ou fisicos."
  },
  "tags": [
    {
      "name": "Authentication",
      "description": "Todas as operações de autenticação. \n\nServiços Utilizados: \n - Google \n - Facebook \n - AppleId",
      "x-displayName": "Autenticação"
    },
    {
      "name": "Customer",
      "description": "Todas as operações para o cliente",
      "x-displayName": "Cliente"
    },
    {
      "name": "Products",
      "description": "Tudo sobre Produtos",
      "x-displayName": "Produtos"
    },
    {
      "name": "Shopping Cart",
      "description": "Operações sobre o Carrinho de Compras",
      "x-displayName": "Carrinho de Compras"
    },
    {
      "name": "Orders",
      "description": "Operações sobre Pedidos",
      "x-displayName": "Pedidos"
    }
  ],
  "servers": [
    {
      "url": "https://api.bompedido.app/api",
      "description": "Produção"
    },
    {
      "url": "http://localhost:8080/api",
      "description": "Local"
    }
  ],
  "paths": {
    "/v1/auth/google/customer": {
      "post": {
        "security": [
          { "TenantId": [] }
        ],
        "summary": "Autenticar Cliente com Google",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "description": "Dados de autenticação do cliente via Google",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GoogleAuthRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cliente autenticado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "400": {
            "description": "Dados inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnAuthorizedErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "cUrl",
            "label": "Curl",
            "source": "curl --request POST \\\n  --url https://api.bompedido.app/api/v1/auth/google/customer \\\n  --header 'X-Tenant-Id: {TENANT_ID}' \\\n  --header 'content-type: application/json' \\\n  --data '{\n  \"token\": \"<GOOGLE_TOKEN>\"\n}'"
          }
        ]
      }
    },
    "/v1/customers/me": {
      "get": {
        "summary": "Obter Dados do Cliente",
        "tags": [
          "Customer"
        ],
        "responses": {
          "200": {
            "description": "Dados do cliente retornados com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerResponse"
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnAuthorizedErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Cliente não encontrado"
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "cUrl",
            "label": "Curl",
            "source": "curl --request GET \\\n \\\n  --header 'X-Tenant-Id: {TENANT_ID}'  --url https://api.bompedido.app/api/v1/customers/me"
          }
        ]
      }
    },
    "/v1/products": {
      "post": {
        "summary": "Criar Produto",
        "tags": [
          "Products"
        ],
        "requestBody": {
          "description": "Dados do produto a ser criado",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Produto criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateProductResponse"
                }
              }
            }
          },
          "400": {
            "description": "Dados inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnAuthorizedErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "cUrl",
            "label": "Curl",
            "source": "curl --request POST \\\n  --url https://api.bompedido.app/api/v1/products \\\n  --header 'X-Tenant-Id: {TENANT_ID}' \\\n  --header 'content-type: application/json' \\\n  --data '{\n  \"name\": \"Produto 1\", \"description\": \"Descrição do Produto\", \"price\": 59.90\n}'"
          }
        ]
      },
      "get": {
        "summary": "Listar Produtos",
        "tags": [
          "Products"
        ],
        "responses": {
          "200": {
            "description": "Lista de produtos retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnAuthorizedErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "cUrl",
            "label": "Curl",
            "source": "curl --request GET \\\n  --header 'X-Tenant-Id: {TENANT_ID}' \\\n  --url https://api.bompedido.app/api/v1/products"
          }
        ]
      }
    },
    "/v1/shopping-cart/checkout": {
      "post": {
        "summary": "Checkout do Carrinho de Compras",
        "tags": [
          "Shopping Cart"
        ],
        "requestBody": {
          "description": "Dados necessários para processar o checkout",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckoutRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Pedido realizado com sucesso"
          },
          "400": {
            "description": "Dados inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnAuthorizedErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "cUrl",
            "label": "Curl",
            "source": "curl --request POST \\\n  --url https://api.bompedido.app/api/v1/shopping-cart/checkout \\\n  --header 'X-Tenant-Id: {TENANT_ID}' \\\n --header 'content-type: application/json' \\\n --data '{\n  \"paymentMethod\": \"CREDIT_CARD\",\n  \"paymentMode\": \"IN_APP\",\n  \"deliveryMode\": \"DELIVERY\",\n  \"creditCardToken\": \"0191656a-eb08-7aad-9856-52caa3f1cd99\",\n  \"addressId\": \"abc123\"\n}' "
          }
        ]
      }
    },
    "/v1/shopping-cart/items": {
      "patch": {
        "summary": "Adicionar Item ao Carrinho de Compras",
        "tags": [
          "Shopping Cart"
        ],
        "requestBody": {
          "description": "Dados necessários para adicionar um item ao carrinho",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddItemRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Item adicionado com sucesso"
          },
          "400": {
            "description": "Dados inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnAuthorizedErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "cUrl",
            "label": "Curl",
            "source": "curl --request PATCH \\\n  --url https://api.bompedido.app/api/v1/shopping-cart/items \\\n  --header 'X-Tenant-Id: {TENANT_ID}' \\\n  --header 'content-type: application/json' \\\n  --data '{\n  \"productId\": \"01916125-fb78-765d-80dc-3ab8106d569b\",\n  \"description\": \"Sem Cebola\",\n  \"quantity\": 2\n}'"
          }
        ]
      }
    },
    "/v1/orders/{id}/approve": {
      "post": {
        "summary": "Aprovar Pedido",
        "tags": [
          "Orders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID do pedido a ser aprovado"
          }
        ],
        "responses": {
          "204": {
            "description": "Pedido aprovado com sucesso"
          },
          "400": {
            "description": "Dados inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnAuthorizedErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "cUrl",
            "label": "Curl",
            "source": "curl --request POST \\\n  --url https://api.bompedido.app/api/v1/orders/{id}/approve \\\n  --header 'X-Tenant-Id: {TENANT_ID}' \\\n  --header 'content-type: application/json'"
          }
        ]
      }
    },
    "/v1/orders/{id}/reject": {
      "post": {
        "summary": "Rejeitar Pedido",
        "tags": [
          "Orders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID do pedido a ser rejeitado"
          }
        ],
        "requestBody": {
          "description": "Dados para rejeição do Pedido",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "reason"
                ],
                "properties": {
                  "reason": {
                    "type": "string",
                    "description": "Razão da rejeição",
                    "example": "Solicitação do Cliente"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Pedido rejeitado com sucesso"
          },
          "400": {
            "description": "Dados inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnAuthorizedErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "cUrl",
            "label": "Curl",
            "source": "curl --request POST \\\n  --url https://api.bompedido.app/api/v1/orders/{id}/reject \\\n  --header 'X-Tenant-Id: {TENANT_ID}' \\\n  --header 'content-type: application/json' \\\n  --data '{\n  \"reason\": \"Solicitação do Cliente\"\n}'"
          }
        ]
      }
    },
    "/v1/orders/{id}/cancel": {
      "post": {
        "summary": "Cancelar Pedido",
        "tags": [
          "Orders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID do pedido a ser cancelado"
          }
        ],
        "requestBody": {
          "description": "Dados para cancelamento do Pedido",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "reason"
                ],
                "properties": {
                  "reason": {
                    "type": "string",
                    "description": "Razão do cancelamento",
                    "example": "Solicitação do Cliente"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Pedido cancelado com sucesso"
          },
          "400": {
            "description": "Dados inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnAuthorizedErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "cUrl",
            "label": "Curl",
            "source": "curl --request POST \\\n  --url https://api.bompedido.app/api/v1/orders/{id}/cancel \\\n  --header 'X-Tenant-Id: {TENANT_ID}' \\\n  --header 'content-type: application/json' \\\n  --data '{\n  \"reason\": \"Solicitação do Cliente\"\n}'"
          }
        ]
      }
    },
    "/v1/orders/{id}/finish": {
      "post": {
        "summary": "Finalizar Pedido",
        "tags": [
          "Orders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID do pedido a ser finalizado"
          }
        ],
        "responses": {
          "204": {
            "description": "Pedido finalizado com sucesso"
          },
          "400": {
            "description": "Dados inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnAuthorizedErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "cUrl",
            "label": "Curl",
            "source": "curl --request POST \\\n  --url https://api.bompedido.app/api/v1/orders/{id}/finish \\\n  --header 'X-Tenant-Id: {TENANT_ID}' \\\n  --header 'content-type: application/json'"
          }
        ]
      }
    },
    "/v1/orders/{id}/in-progress": {
      "post": {
        "summary": "Marcar Pedido como Em Progresso",
        "tags": [
          "Orders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID do pedido a ser marcado como em progresso"
          }
        ],
        "responses": {
          "204": {
            "description": "Pedido marcado como em progresso com sucesso"
          },
          "400": {
            "description": "Dados inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnAuthorizedErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "cUrl",
            "label": "Curl",
            "source": "curl --request POST \\\n  --url https://api.bompedido.app/api/v1/orders/{id}/in-progress \\\n  --header 'X-Tenant-Id: {TENANT_ID}' \\\n  --header 'content-type: application/json'"
          }
        ]
      }
    },
    "/v1/orders/{id}/delivering": {
      "post": {
        "summary": "Marcar Pedido como Em Entrega",
        "tags": [
          "Orders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID do pedido a ser marcado como em entrega"
          }
        ],
        "responses": {
          "204": {
            "description": "Pedido marcado como em entrega com sucesso"
          },
          "400": {
            "description": "Dados inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnAuthorizedErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "cUrl",
            "label": "Curl",
            "source": "curl --request POST \\\n  --url https://api.bompedido.app/api/v1/orders/{id}/delivering \\\n  --header 'X-Tenant-Id: {TENANT_ID}' \\\n  --header 'content-type: application/json'"
          }
        ]
      }
    },
    "/v1/orders/{id}/awaiting-withdraw": {
      "post": {
        "summary": "Marcar Pedido como Aguardando Retirada",
        "tags": [
          "Orders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID do pedido a ser marcado como aguardando retirada"
          }
        ],
        "responses": {
          "204": {
            "description": "Pedido marcado como aguardando retirada com sucesso"
          },
          "400": {
            "description": "Dados inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnAuthorizedErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "cUrl",
            "label": "Curl",
            "source": "curl --request POST \\\n  --url https://api.bompedido.app/api/v1/orders/{id}/awaiting-withdraw \\\n  --header 'X-Tenant-Id: {TENANT_ID}' \\\n  --header 'content-type: application/json'"
          }
        ]
      }
    },
    "/v1/orders/{id}/awaiting-delivery": {
      "post": {
        "summary": "Marcar Pedido como Aguardando Entrega",
        "tags": [
          "Orders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID do pedido a ser marcado como aguardando entrega"
          }
        ],
        "responses": {
          "204": {
            "description": "Pedido marcado como aguardando entrega com sucesso"
          },
          "400": {
            "description": "Dados inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnAuthorizedErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "cUrl",
            "label": "Curl",
            "source": "curl --request POST \\\n  --url https://api.bompedido.app/api/v1/orders/{id}/awaiting-delivery \\\n  --header 'X-Tenant-Id: {TENANT_ID}' \\\n  --header 'content-type: application/json'"
          }
        ]
      }
    },
    "/v1/orders/{id}/clone": {
      "post": {
        "summary": "Clonar Pedido",
        "tags": [
          "Orders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID do pedido a ser clonado"
          }
        ],
        "responses": {
          "204": {
            "description": "Pedido clonado com sucesso"
          },
          "400": {
            "description": "Dados inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnAuthorizedErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "cUrl",
            "label": "Curl",
            "source": "curl --request POST \\\n  --url https://api.bompedido.app/api/v1/orders/{id}/clone \\\n  --header 'X-Tenant-Id: {TENANT_ID}' \\\n  --header 'content-type: application/json'"
          }
        ]
      }
    }
  },
  "security": [
    {
      "JWE": [],
      "TenantId": []
    }
  ],
  "components": {
    "securitySchemes": {
      "JWE": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWE",
        "description": "JWE token para autenticação. O token deve ser obtido através do endpoint de autenticação e enviado em cada requisição protegida."
      },
      "TenantId": {
        "type": "apiKey",
        "name": "X-Tenant-Id",
        "in": "header",
        "description": "Tenant Identifier"
      }
    },
    "schemas": {
      "PaymentMethod": {
        "type": "string",
        "enum": ["CREDIT_CARD", "DEBIT_CARD", "MONEY", "PIX"],
        "title": "Meio de Pagamento",
        "description": "Indica o meio de pagamento aceito nas transações. Pode ser um dos seguintes valores: \n\n- **CREDIT_CARD**: Pagamento com Cartão de Crédito à Vista.\n- **DEBIT_CARD**: Pagamento com Cartão de Débito.\n- **MONEY**: Pagamento com Dinheiro.\n- **PIX**: Pagamento via PIX usando QrCode ou Pix Copia e Cola.",
        "x-enumDescriptions": {
          "CREDIT_CARD": "Pagamento com Cartão de Crédito à Vista",
          "DEBIT_CARD": "Pagamento com Cartão de Débito",
          "MONEY": "Pagamento com Dinheiro",
          "PIX": "Pagamento com PIX a partir de QrCode ou Pix Copia e Cola"
        }
      },
      "PaymentMode": {
        "type": "string",
        "enum": ["IN_APP", "IN_RECEIVING"],
        "title": "Modo de Pagamento",
        "description": "Define o modo de pagamento selecionado pelo cliente: \n\n- **IN_APP**: Pagamento realizado diretamente pelo aplicativo.\n- **IN_RECEIVING**: Pagamento realizado no momento da entrega ou retirada do pedido.",
        "x-enumDescriptions": {
          "IN_APP": "Pagamento pelo App",
          "IN_RECEIVING": "Pagamento no recebimento/retirada do produto"
        }
      },
      "DeliveryMode": {
        "type": "string",
        "enum": ["DELIVERY", "WITHDRAW"],
        "title": "Modo de Entrega do Pedido",
        "description": "Especifica como o pedido será entregue ao cliente: \n\n- **DELIVERY**: O pedido será entregue no endereço fornecido pelo cliente, sujeito a uma taxa de entrega.\n- **WITHDRAW**: O cliente irá retirar o pedido no estabelecimento.",
        "x-enumDescriptions": {
          "DELIVERY": "O pedido será enviado para o endereço desejado pelo cliente (sujeito à taxa de entrega)",
          "WITHDRAW": "O pedido será retirado pelo cliente no estabelecimento"
        }
      },
      "CheckoutRequest": {
        "type": "object",
        "properties": {
          "paymentMethod": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "paymentMode": {
            "$ref": "#/components/schemas/PaymentMode"
          },
          "deliveryMode": {
            "$ref": "#/components/schemas/DeliveryMode"
          },
          "payback": {
            "type": "number",
            "example": "50.00",
            "description": "Valor que o cliente está pagando em dinheiro. Utilizado para calcular o troco. Este campo é obrigatório quando o meio de pagamento é **MONEY**."
          },
          "creditCardToken": {
            "type": "string",
            "example": "0191656a-eb08-7aad-9856-52caa3f1cd99",
            "description": "Token do cartão de crédito gerado pela solução de pagamento. Necessário quando o meio de pagamento é **CREDIT_CARD** e o pagamento é **IN_APP**."
          },
          "addressId": {
            "type": "string",
            "example": "abc123",
            "description": "Identificador do endereço de entrega do pedido. Obrigatório quando o modo de entrega é **DELIVERY**."
          }
        },
        "required": [
          "deliveryMode",
          "paymentMethod",
          "paymentMode"
        ],
        "description": "Requisição para realizar o checkout de um carrinho de compras. Dependendo do meio de pagamento e modo de entrega selecionados, campos adicionais podem ser necessários."
      },
      "AddItemRequest": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "example": "01916125-fb78-765d-80dc-3ab8106d569b",
            "description": "Identificador único do produto que está sendo adicionado ao carrinho."
          },
          "description": {
            "type": "string",
            "example": "Sem Cebola",
            "description": "Descrição opcional sobre como o produto deve ser preparado ou outras observações relevantes."
          },
          "quantity": {
            "type": "integer",
            "example": 2,
            "description": "Quantidade do produto que está sendo adicionada ao carrinho."
          }
        },
        "required": [
          "productId",
          "quantity"
        ],
        "description": "Requisição para adicionar um item ao carrinho de compras. Inclui o identificador do produto, a quantidade desejada e quaisquer observações adicionais."
      },
      "CreateProductRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Produto X",
            "description": "Nome do produto a ser criado.",
            "minLength": 5
          },
          "description": {
            "type": "string",
            "example": "Detalhes do produto X",
            "description": "Descrição detalhada do produto, incluindo características e benefícios."
          },
          "price": {
            "type": "number",
            "format": "float",
            "example": 99.99,
            "description": "Preço do produto. Deve ser um valor numérico positivo.",
            "minimum": 0.01
          }
        },
        "required": [
          "name",
          "price"
        ],
        "description": "Requisição para criar um novo produto. Inclui o nome, descrição e preço do produto."
      },
      "CreateProductResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "019160ee-7929-72d3-99cf-6c7f33789ba8",
            "description": "Identificador único do produto criado."
          }
        },
        "description": "Resposta retornada ao criar um novo produto. Contém o identificador único do produto."
      },
      "ProductListResponse": {
        "type": "array",
        "items": {
          "properties": {
            "id": {
              "type": "string",
              "example": "01916125-fb78-765d-80dc-3ab8106d569b",
              "description": "Identificador único do produto."
            },
            "name": {
              "type": "string",
              "example": "Produto X",
              "description": "Nome do produto."
            },
            "description": {
              "type": "string",
              "example": "Detalhes do Produto X",
              "description": "Descrição detalhada do produto."
            },
            "price": {
              "type": "number",
              "format": "float",
              "example": 99.99,
              "description": "Preço do produto."
            },
            "imageURL": {
              "type": "string",
              "example": "https://images.bompedido.app/01916125-fb78-765d-80dc-3ab8106d569b",
              "description": "URL da imagem do produto."
            }
          }
        },
        "description": "Lista de produtos retornada pela API. Cada item contém o identificador, nome, descrição, preço e URL da imagem do produto."
      },
      "GoogleAuthRequest": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "example": "google_token_abc123",
            "description": "Token de autenticação fornecido pelo Google. Utilizado para autenticar o cliente."
          }
        },
        "required": [
          "token"
        ],
        "description": "Requisição de autenticação via Google. Contém o token gerado pelo Google."
      },
      "AuthResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "example": "access_token_xyz789",
            "description": "Token JWE retornado após a autenticação bem-sucedida. Este token deve ser usado nos headers de Authorization para chamadas subsequentes à API."
          }
        },
        "description": "Resposta de autenticação. Contém o token JWE necessário para autenticação em endpoints protegidos."
      },
      "CustomerResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Cliente X",
            "description": "Nome do Cliente"
          },
          "email": {
            "type": "string",
            "example": "cliente@bompedido.app",
            "description": "Email do Cliente"
          },
          "phoneNumber": {
            "type": "string",
            "example": "16999999999",
            "description": "Número de Telefone do Cliente"
          }
        },
        "description": "Dados do cliente autenticado retornados pela API. Inclui nome, email e número de telefone."
      },
      "BadRequestErrorResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "O campo X é obrigatório",
              "description": "Mensagem de erro detalhando o problema ocorrido na requisição."
            }
          }
        },
        "description": "Resposta de erro para requisições malformadas. Inclui uma lista de mensagens de erro específicas."
      },
      "UnAuthorizedErrorResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Você não possui permissão para acessar esse recurso",
              "description": "Mensagem de erro indicando que a requisição falhou devido a problemas de autenticação ou autorização."
            }
          }
        },
        "description": "Resposta de erro para tentativas de acesso não autorizado. Inclui mensagens explicativas."
      },
      "InternalServerErrorResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Ocorreu um erro interno",
              "description": "Mensagem de erro genérica indicando que um problema inesperado ocorreu no servidor."
            }
          }
        },
        "description": "Resposta de erro genérica para falhas inesperadas no servidor. Inclui uma mensagem de erro."
      }
    }
  }
}